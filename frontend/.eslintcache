[{"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/index.js":"1","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/auth/LogInForm.js":"2","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/Homepage.js":"3","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/store/actions/auth.js":"4","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/App.js":"5","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/PrivateRoute.js":"6","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/SplashPage.js":"7","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/store/reducers/auth.js":"8","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/store/configureStore.js":"9","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/auth/SignUpForm.js":"10","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/NavBar.js":"11"},{"size":596,"mtime":1606610135567,"results":"12","hashOfConfig":"13"},{"size":3716,"mtime":1606609727250,"results":"14","hashOfConfig":"13"},{"size":320,"mtime":1606612526139,"results":"15","hashOfConfig":"13"},{"size":6271,"mtime":1606608376609,"results":"16","hashOfConfig":"13"},{"size":1081,"mtime":1606602767383,"results":"17","hashOfConfig":"13"},{"size":330,"mtime":1606669037026,"results":"18","hashOfConfig":"13"},{"size":163,"mtime":1606353545962,"results":"19","hashOfConfig":"13"},{"size":1671,"mtime":1606349865841,"results":"20","hashOfConfig":"13"},{"size":477,"mtime":1606353526650,"results":"21","hashOfConfig":"13"},{"size":13425,"mtime":1606611060010,"results":"22","hashOfConfig":"13"},{"size":2902,"mtime":1606675767659,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k1yski",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/index.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/auth/LogInForm.js",["48"],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/Homepage.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/store/actions/auth.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/App.js",[],["49","50"],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/PrivateRoute.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/SplashPage.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/store/reducers/auth.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/store/configureStore.js",[],"/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/auth/SignUpForm.js",["51"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { updateEmailValue, updateUserNameValue, updatePasswordValue, updateCPValue, signUp } from '../../store/actions/auth';\n\n\nconst SignUpForm = (props) => {\n    const [userName, setUserName] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\")\n\n\n\n    useEffect(() => {\n        if (props.msg) {\n            const errDiv = window.document.querySelector(\".errDiv\");\n            const errTitle = window.document.createElement(\"h4\")\n            const invalidCred = window.document.createElement(\"li\");\n            errTitle.innerHTML = `${props.title}`;\n            errTitle.setAttribute(\"style\", \"font-size: 30px;font-weight: 700;color: red\");\n            invalidCred.innerHTML = `${props.msg}`;\n            invalidCred.setAttribute(\"style\", \"font-size: 20px;color: black\");\n            errDiv.innerHTML = \"\";\n            errTitle.appendChild(invalidCred);\n            errDiv.appendChild(errTitle);\n            if (props.msg === \"Please fill out First Name field\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"firstNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"firstNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please fill out First Name and Password fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"firstNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"firstNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"red\"\n                window.document.getElementById(\"passwordField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"red\"\n                window.document.getElementById(\"cpField\").style.borderWidth = \"3px\"\n            }\n            if (props.msg === \"Please fill out First Name and Username fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"userNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"firstNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"firstNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please fill out First Name and Email fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"red\"\n                window.document.getElementById(\"emailField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"firstNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"firstNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please fill out Email field\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"red\"\n                window.document.getElementById(\"emailField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please fill out Username field\") {\n                window.document.getElementById(\"userNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"userNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Sorry, that Username already exists\") {\n                window.document.getElementById(\"userNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"userNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please follow Password requirements\") {\n                window.document.getElementById(\"passwordField\").style.borderColor = \"red\"\n                window.document.getElementById(\"passwordField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"red\"\n                window.document.getElementById(\"cpField\").style.borderWidth = \"3px\"\n            }\n            if (props.msg === \"Password and Confirmed Password must match\") {\n                window.document.getElementById(\"passwordField\").style.borderColor = \"red\"\n                window.document.getElementById(\"passwordField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"red\"\n                window.document.getElementById(\"cpField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please fill out all required fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"red\"\n                window.document.getElementById(\"emailField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"userNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"firstNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"firstNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"red\"\n                window.document.getElementById(\"passwordField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"red\"\n                window.document.getElementById(\"cpField\").style.borderWidth = \"3px\"\n            }\n            if (props.msg === \"Please fill out Email and Username fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"red\"\n                window.document.getElementById(\"emailField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"userNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"\"\n            }\n            if (props.msg === \"Please fill out Username and Password fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"red\"\n                window.document.getElementById(\"userNameField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"red\"\n                window.document.getElementById(\"passwordField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"red\"\n                window.document.getElementById(\"cpField\").style.borderWidth = \"3px\"\n            }\n            if (props.msg === \"Please fill out Email and Password fields\") {\n                window.document.getElementById(\"emailField\").style.borderColor = \"red\"\n                window.document.getElementById(\"emailField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"userNameField\").style.borderColor = \"\"\n                window.document.getElementById(\"passwordField\").style.borderColor = \"red\"\n                window.document.getElementById(\"passwordField\").style.borderWidth = \"3px\"\n                window.document.getElementById(\"cpField\").style.borderColor = \"red\"\n                window.document.getElementById(\"cpField\").style.borderWidth = \"3px\"\n            }\n        }\n    }, [props.msg])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.signUp(userName, email, password, confirmedPassword);\n    }\n\n    const updateUserName = (e) => {\n        setUserName(e.target.value);\n    }\n\n    const updateFirstName = (e) => {\n        setFirstName(e.targ.value);\n    }\n\n    const updateEmail = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const updatePassword = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const updateConfirmedPassword = (e) => {\n        setConfirmedPassword(e.target.value);\n    }\n\n    return (\n        <>\n            <div className=\"create-user-form\" style={{ backgroundColor: \"darkorange\", borderRadius: \"18px\" }}>\n                <Form>\n                    <h1 id=\"signin-header\">Sign Up to listen to your favorite Vibes!</h1>\n                    <div className=\"errDiv\"></div>\n                    <p>Use 8 or more characters with at least 1 uppercase letter and a mix of numbers and/or symbols</p>\n                    <Form.Group controlId=\"formBasic\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control onChange={updateUserName} value={userName} type=\"text\" id=\"userNameField\" placeholder=\"Enter Username\" required />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control onChange={updateFirstName} type=\"text\" value={firstName} id=\"firstNameField\" placeholder=\"Enter First Name\" required />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control onChange={updateEmail} type=\"email\" value={email} id=\"emailField\" placeholder=\"Enter Email\" required />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control onChange={updatePassword} type=\"password\" value={password} id=\"passwordField\" required />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control onChange={updateConfirmedPassword} type=\"password\" value={confirmedPassword} id=\"cpField\" required />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={handleSubmit} type=\"submit\" className=\"create-user-button\">Create</Button>\n                </Form>\n            </div>\n            <div>\n\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        email: state.auth.email,\n        userName: state.auth.userName,\n        password: state.auth.password,\n        CP: state.auth.CP,\n        title: state.auth.title,\n        msg: state.auth.msg,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return (\n        {\n            updateEmailValue: (event) => dispatch(updateEmailValue(event.target.value)),\n            updateUserNameValue: (event) => dispatch(updateUserNameValue(event.target.value)),\n            updatePasswordValue: (event) => dispatch(updatePasswordValue(event.target.value)),\n            updateCPValue: (event) => dispatch(updateCPValue(event.target.value)),\n            signUp: (userName, email, password, confirmedPassword) => dispatch(signUp(userName, email, password, confirmedPassword)),\n        }\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","/Users/elijahhubbard/Desktop/soundcloudProject/frontend/src/components/NavBar.js",["52","53","54","55"],{"ruleId":"56","severity":1,"message":"57","line":33,"column":8,"nodeType":"58","endLine":33,"endColumn":19,"suggestions":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"56","severity":1,"message":"57","line":141,"column":8,"nodeType":"58","endLine":141,"endColumn":19,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":44,"column":33,"nodeType":"67","endLine":44,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":47,"column":33,"nodeType":"67","endLine":47,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":50,"column":33,"nodeType":"67","endLine":50,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":53,"column":33,"nodeType":"67","endLine":53,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.title'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["71"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"72","fix":"73"},"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"74"},"Update the dependencies array to be: [props.msg, props.title]",{"range":"75","text":"76"},{"range":"77","text":"76"},[1629,1640],"[props.msg, props.title]",[9819,9830]]